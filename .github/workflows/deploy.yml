name: Deploy to GitHub Pages with Firebase Config

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Inject Firebase Configuration
      run: |
        # Verificar se os secrets estão definidos
        echo "🔍 Verificando secrets do Firebase..."
        if [ -z "${{ secrets.FIREBASE_API_KEY }}" ]; then
          echo "❌ FIREBASE_API_KEY não definido"
          exit 1
        fi
        
        # Criar arquivo de configuração com as secrets
        echo "📝 Criando arquivo firebase-env.js..."
        cat > presenciais/firebase-env.js << EOF
        // Configuração Firebase injetada pelo GitHub Actions
        window.FIREBASE_API_KEY = '${{ secrets.FIREBASE_API_KEY }}';
        window.FIREBASE_AUTH_DOMAIN = '${{ secrets.FIREBASE_AUTH_DOMAIN }}';
        window.FIREBASE_PROJECT_ID = '${{ secrets.FIREBASE_PROJECT_ID }}';
        window.FIREBASE_STORAGE_BUCKET = '${{ secrets.FIREBASE_STORAGE_BUCKET }}';
        window.FIREBASE_MESSAGING_SENDER_ID = '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}';
        window.FIREBASE_APP_ID = '${{ secrets.FIREBASE_APP_ID }}';
        console.log('🔐 Variáveis Firebase carregadas via GitHub Actions');
        EOF
        
        echo "✅ Arquivo firebase-env.js criado com sucesso"
        echo "📋 Conteúdo (sem secrets):"
        sed 's/= .*/= "[REDACTED]"/g' presenciais/firebase-env.js
        
    - name: Update HTML to include environment file
      run: |
        # Verificar se o arquivo existe
        if [ -f "presenciais/presenciais.html" ]; then
          # Criar backup
          cp presenciais/presenciais.html presenciais/presenciais.html.backup
          
          # Adicionar o script de configuração antes do firebase-config-local.js (se existir) ou firebase-config-safe.js
          if grep -q "firebase-config-local.js" presenciais/presenciais.html; then
            sed -i 's|<script src="firebase-config-local.js"></script>|<script src="firebase-env.js"></script>|' presenciais/presenciais.html
          else
            sed -i 's|<script src="firebase-config-safe.js"></script>|<script src="firebase-env.js"></script>\n    <script src="firebase-config-safe.js"></script>|' presenciais/presenciais.html
          fi
          
          echo "✅ HTML atualizado com sucesso"
          echo "📝 Verificando mudanças:"
          diff presenciais/presenciais.html.backup presenciais/presenciais.html || true
        else
          echo "❌ Arquivo presenciais.html não encontrado"
          exit 1
        fi
        
    - name: List files before deploy
      run: |
        echo "📂 Estrutura do projeto antes do deploy:"
        find . -type f -name "*.html" -o -name "*.js" -o -name "*.css" | head -20
        echo ""
        echo "📋 Arquivos na pasta presenciais:"
        ls -la presenciais/
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
        
    - name: Success notification
      run: |
        echo "✅ Deploy realizado com sucesso!"
        echo "🔐 Configuração Firebase injetada"
        echo "🌐 Site disponível em: ${{ steps.deployment.outputs.page_url }}"