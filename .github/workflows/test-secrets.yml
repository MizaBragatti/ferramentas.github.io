name: Test Firebase Secrets

on:
  workflow_dispatch: # Permite execu√ß√£o manual
  push:
    branches: [ main ]
    paths:
      - 'presenciais/debug-config.html'

jobs:
  test-secrets:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Test Firebase Secrets
      run: |
        echo "üîç Testando se todas as secrets Firebase est√£o definidas..."
        
        # Array com todas as secrets necess√°rias
        SECRETS=(
          "FIREBASE_API_KEY"
          "FIREBASE_AUTH_DOMAIN"
          "FIREBASE_PROJECT_ID"
          "FIREBASE_STORAGE_BUCKET"
          "FIREBASE_MESSAGING_SENDER_ID"
          "FIREBASE_APP_ID"
        )
        
        ALL_PRESENT=true
        
        for secret in "${SECRETS[@]}"; do
          case $secret in
            "FIREBASE_API_KEY")
              if [ -n "${{ secrets.FIREBASE_API_KEY }}" ]; then
                echo "‚úÖ $secret: Definida (${#{{ secrets.FIREBASE_API_KEY }}} caracteres)"
              else
                echo "‚ùå $secret: N√ÉO DEFINIDA"
                ALL_PRESENT=false
              fi
              ;;
            "FIREBASE_AUTH_DOMAIN")
              if [ -n "${{ secrets.FIREBASE_AUTH_DOMAIN }}" ]; then
                echo "‚úÖ $secret: Definida (${{ secrets.FIREBASE_AUTH_DOMAIN }})"
              else
                echo "‚ùå $secret: N√ÉO DEFINIDA"
                ALL_PRESENT=false
              fi
              ;;
            "FIREBASE_PROJECT_ID")
              if [ -n "${{ secrets.FIREBASE_PROJECT_ID }}" ]; then
                echo "‚úÖ $secret: Definida (${{ secrets.FIREBASE_PROJECT_ID }})"
              else
                echo "‚ùå $secret: N√ÉO DEFINIDA"
                ALL_PRESENT=false
              fi
              ;;
            "FIREBASE_STORAGE_BUCKET")
              if [ -n "${{ secrets.FIREBASE_STORAGE_BUCKET }}" ]; then
                echo "‚úÖ $secret: Definida (${{ secrets.FIREBASE_STORAGE_BUCKET }})"
              else
                echo "‚ùå $secret: N√ÉO DEFINIDA"
                ALL_PRESENT=false
              fi
              ;;
            "FIREBASE_MESSAGING_SENDER_ID")
              if [ -n "${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" ]; then
                echo "‚úÖ $secret: Definida (${{ secrets.FIREBASE_MESSAGING_SENDER_ID }})"
              else
                echo "‚ùå $secret: N√ÉO DEFINIDA"
                ALL_PRESENT=false
              fi
              ;;
            "FIREBASE_APP_ID")
              if [ -n "${{ secrets.FIREBASE_APP_ID }}" ]; then
                echo "‚úÖ $secret: Definida (${#{{ secrets.FIREBASE_APP_ID }}} caracteres)"
              else
                echo "‚ùå $secret: N√ÉO DEFINIDA"
                ALL_PRESENT=false
              fi
              ;;
          esac
        done
        
        echo ""
        if [ "$ALL_PRESENT" = true ]; then
          echo "üéâ SUCESSO: Todas as secrets Firebase est√£o configuradas!"
          echo "‚úÖ O deploy pode prosseguir normalmente"
        else
          echo "‚ö†Ô∏è ATEN√á√ÉO: Algumas secrets est√£o faltando!"
          echo "üîß Configure as secrets em: https://github.com/${{ github.repository }}/settings/secrets/actions"
        fi
        
    - name: Test Configuration Injection
      run: |
        echo "üß™ Testando inje√ß√£o de configura√ß√£o..."
        
        # Simular o processo de inje√ß√£o
        python3 << 'EOF'
        # Verificar se conseguimos acessar as secrets
        import os
        
        secrets = {
            'FIREBASE_API_KEY': '${{ secrets.FIREBASE_API_KEY }}',
            'FIREBASE_AUTH_DOMAIN': '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
            'FIREBASE_PROJECT_ID': '${{ secrets.FIREBASE_PROJECT_ID }}',
            'FIREBASE_STORAGE_BUCKET': '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
            'FIREBASE_MESSAGING_SENDER_ID': '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}',
            'FIREBASE_APP_ID': '${{ secrets.FIREBASE_APP_ID }}'
        }
        
        all_valid = True
        for key, value in secrets.items():
            if not value or value == '':
                print(f"‚ùå {key}: Vazio ou n√£o definido")
                all_valid = False
            else:
                # Mascarar valores sens√≠veis para log
                if 'KEY' in key or 'APP_ID' in key:
                    masked = value[:8] + '...' if len(value) > 8 else '***'
                    print(f"‚úÖ {key}: {masked} ({len(value)} chars)")
                else:
                    print(f"‚úÖ {key}: {value}")
        
        if all_valid:
            print("\nüéâ Todas as secrets s√£o v√°lidas!")
        else:
            print("\n‚ö†Ô∏è Algumas secrets est√£o inv√°lidas!")
            exit(1)
        EOF