// Configura√ß√£o Firebase Unificada - Funciona em desenvolvimento e produ√ß√£o
window.getFirebaseConfig = function() {
    // Prioridade 1: Vari√°veis injetadas pelo GitHub Actions (produ√ß√£o)
    if (window.FIREBASE_API_KEY && 
        window.FIREBASE_API_KEY !== 'undefined' && 
        window.FIREBASE_API_KEY.length > 10) {
        
        console.log('üåê Usando configura√ß√£o de produ√ß√£o (GitHub Actions)');
        return {
            apiKey: window.FIREBASE_API_KEY,
            authDomain: window.FIREBASE_AUTH_DOMAIN,
            projectId: window.FIREBASE_PROJECT_ID,
            storageBucket: window.FIREBASE_STORAGE_BUCKET,
            messagingSenderId: window.FIREBASE_MESSAGING_SENDER_ID,
            appId: window.FIREBASE_APP_ID
        };
    }
    
    // Prioridade 2: Configura√ß√£o local (desenvolvimento)
    if (window.FIREBASE_CONFIG_LOCAL) {
        console.log('üõ†Ô∏è Usando configura√ß√£o local (desenvolvimento)');
        return window.FIREBASE_CONFIG_LOCAL;
    }
    
    // Sem configura√ß√£o dispon√≠vel - falha com mensagem clara
    console.error('‚ùå Nenhuma configura√ß√£o Firebase encontrada!');
    console.log('üîê Para configurar:');
    console.log('  üìç Desenvolvimento: Configure firebase-config-local.js');
    console.log('  üìç Produ√ß√£o: Configure secrets no GitHub Actions');
    
    throw new Error('Configura√ß√£o Firebase n√£o encontrada. Configure as vari√°veis de ambiente ou secrets do GitHub.');
};

// Disponibilizar configura√ß√£o globalmente
window.FIREBASE_CONFIG = window.getFirebaseConfig();
console.log('üî• Firebase configurado para:', window.location.hostname);